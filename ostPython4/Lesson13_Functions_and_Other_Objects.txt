Lesson 13: Functions and Other Objects


Project:

Filename(s):  sstr.py  test_sstr.py


Write a subclass sstr of the standard str type that implements the "<<" and ">>" methods 
as a cyclic shifting of the characters in the string. It should pass the following tests, 
which you should embody as unit tests in a separate test module:


>>> s1 = sstr("abcde")
>>> s1 << 0
'abcde'
>>> s1 >> 0
'abcde'
>>> s1 << 2
'cdeab'
>>> s1 >> 2
'deabc'
>>> s1 >> 5
'abcde'
>>> (s1 >> 5) << 5 == 'abcde'
True





=======
QUIZ 1:
=======

Q1:  How do you set the attributes of a function?

Attribute names become keys for the function's __dict__ and the attribute
values become values for their respective keys.  

>>> def blob():
...   print("blob says hi!")
...
>>> blob.blooey = 1
>>> blob.kachewy = 2
>>> blob.__dict__
{'kachewy' : 2, 'blooey': 1}


Interestingly, if you try and to go:

>>> def blob():
>>>   kachewy = 2
>>>   print("Bye Blob!")
...
>>> blob.kachewy

You get an AttributeError.  No such thing as blob.kachewy.




Q2:  What statement is used to identify names in a function's surrounding scope?


nonlocal


Q3:  Which methods might the interpreter call to evaluate the expression a // b?

__floordiv__(), __rfloordiv__(), or __ifloordiv__()


