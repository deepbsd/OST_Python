Python4: Lesson 2: Data Structures  Project


Extend the definition of the two-dimensional list arr.array from the lesson to
have it save a three-dimensional structure rather than a two-dimensional one.
 

Instructor Feedback:
Overall Comments:
Hi David,

You are totally on the right track here, except that the project should be the
on the basis of the last version of arr.py presented in the Lesson. In other
words, it should accept array specifications in the form of tuples. As an
example, it should pass this test:

import unittest
import naivearr as arr

class ArrayTestCase(unittest.TestCase):
    def test_zeroes(self):
        for N in range(4):
            a = arr.array(N, N, N)
            for i in range(N):
                for j in range(N):
                    for k in range(N):
                        self.assertEqual(a[i, j, k], 0)


if __name__ == "__main__":
    unittest.main()

The fix should be straightforward.

-Pat
Grade:

Try Again

***  2nd try with known stuckness  ***

Hi David,

I suppose I could just give you the answer, but that's far too easy :-).

My suggestion at this point is to start with a really small array (3X 3) say
in very methodically printed out anytime it's changed. Or (possibly more
conveniently) take a "before" and "after" snapshot and just report the
differences. This should quickly tell you whether the values are as expected.

If all of the values are as expected, then there must be something amiss when
retrieving.

With this small program, with so few lines of code, you have a very short list
of suspects.

I would request that you try this method of debugging, with a clear head, when
you are besieged by mellowness and see if you can't make it work on your own.

If you do this, and it still driving you insane, turn in again and I'll give
you more substantive feedback.

Hang in there!

-Pat

======
Quiz 1
======

Q1: Which data types can be used to index a sequence?

"The only two types that can be used as indexes on a sequence are integers and
slices.

Q2: What is the best-known third-party package for numerical programming in
Python?

NumPy

Q3: Which method of o is called when evaluating o[i] (o and i should be part
of the answer)?

o.__getitem__(i)


