

Project for Lesson 6:  Archives

The zipfile example in the lesson text stores the full path of the files that
it saves to the zipfile. Normally, however, zipfiles contain only a relative
pathname (you will see that when the names are listed after the zipfile is
created, the "v:\\" has been removed).

Create a project named Archives_Homework and add it to the Python2_Homework
working set. In this project, write a function that takes a directory path and
creates an archive of the directory only. For example, if the same path were
used as in the example ("v:\\workspace\\Archives\\src\\archive_me"), the
zipfile would contain "archive_me\\groucho" "archive_me\\harpo" and
"archive_me\\chico."

Note that zipfile.namelist() always uses forward slashes in what it returns, a
fact you will need to accommodate when comparing observed and expected.

The base directory ("archive_me" in the example above) is the final element of
the input, and all paths recorded in the zipfile should start with the base
directory.

If the directory contains subdirectories, the subdirectory names and any files
in the subdirectories should not be included. (Hint: You can use isfile() to
determine if a filename represents a regular file and not a directory.)


######################
######################
##   Quiz 1
######################

Q1:  If t is a tarfile object, what method would you call to add file f to the
archive?

t.add(f)


Q2:  What second argument to tarfile.open() specifies writing the archive to
disk with Gzip compression?

tf = tarfile.open(archive_name_compressed, "w:gz")

Q3: What zipfile method returns the names of all files in the archive?

tf.list()


#######################
#######################
##   Quiz 2
#######################

Q1: Given a file path p, write an expression that evaluates to the file name
and extension only.

import os

os.path.basename(p)

Q2: How can you cause a ten-second delay in the execution of your program?

import time

time.sleep(10)

Q3: If lst is a list of filenames sorted with the newest files first, how
would you write an expression to change the order of the list so that the
oldest files come first?

lst.reverse()

