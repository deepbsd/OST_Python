Lesson 4: Iteration, For, While 

Project:

Filename(s):  guess.py

Objective:

This project tests your ability to use for and while loops.

Create a new Python source file named guess.py.

Write a program that uses a while loop to ask the user to guess a number. Each
guess should be checked against a number stored in the "secret" variable, to
which a value between 1 and 20 should be assigned at the start. Otherwise it
should report whether the guess was higher or lower than the secret. If the
user guesses correctly, the loop should terminate. The loop should also keep a
count of the user's guesses, and should terminate if the user makes five
incorrect guesses. After the loop is over, the program should print the secret
if the user didn't guess it, or a congratulatory message if the user guessed
correctly.

Verify that your program works correctly, both when the user guesses correctly
and when they make five incorrect guesses.

Below are two example outputs for the program when "secret" is 12.

	    Guess a number: 16
	    Guess lower
	    Guess a number: 8
	    Guess higher
	    Guess a number: 14
	    Guess lower
	    Guess a number: 10
	    Guess higher
	    Guess a number: 11
	    Sorry, the number was 12

	    Guess a number: 10
	    Guess higher
	    Guess a number: 15
	    Guess lower
	    Guess a number: 12
	    Correct! Well done, the number was 12




Here are the files you handed in:
Python1/guess.py

Overall Comments:

Hi David, Please have a look at my reply to your email on the formatting
stuff. If you still have questions, please write back.  Also, when you have
questions like this, please try to send snippets from an interactive terminal
or actual code. Your first comment above is a little tough to interpret
because of so many things may be wrong with it. There's no closing quotation
mark, I don't know what's in the variable "5-tries", it's not a valid variable
name anyway; or is it intended as an expression? If so, was the variable
"tries" already defined? You get the idea.. Your strategy for testing user
input is sound. It's always a good idea because users are not trustworthy.
Another good reason to provide actual code with questions is that the
following works for me (but I don't have enough information to know how or why
it didn't work for you): 

>>> tries = 0 
>>> tries+=1 
>>> tries 1 

As for this project, it works and works well. Nicely done. -Pat



GRADE: Great

=========
QUIZ 1
=========
Q1: Write a for statement to bind each character of the lower-case alphabet to
the name "c" (there is no need to write a loop body).


Answer #1:
if I'm understanding right, this could be

str = "abcdefghihklmnopqrstuvwxyz"

for c in str :
    print("Now C = ", c)


Is this all you're looking for on this exercise?

omments:
Yep. It could be as simple as:

for c in "abcdefghijklmnopqrstuvwxyz":

... or you could get tricky and use a library:

>>> import string
>>> string.ascii_lowercase
'abcdefghijklmnopqrstuvwxyz'

>>> for c in string.ascii_lowercase

BTW, string is pretty useful. Here's an annotated list of what it has:

>>> dir(string)
[ 'ascii_letters', 'ascii_lowercase', 'ascii_uppercase', 'capwords', 'digits',
'hexdigits', 'octdigits', 'printable', 'punctuation', 'whitespace']

FYI, str is a terrible choice for variable name. For the duration of your
console session, you have redefined a built-in Python object - something that
can cause nasty surprises later.

Q2: What should follow a for statement to comprise the body of a loop?


Answer #2:
got this one right before: suite

Comments:

Overall Comments:

This looks good now, David. Please have a look at the comments. And you can
provide just a placeholder to answers you've already gotten correct - even a
"." will work. -Pat



GRADE: Great

